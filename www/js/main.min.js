(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
module.exports=[
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "frozenDonation",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "devAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "mainnet",
      "outputs": [
        {
          "name": "addr",
          "type": "string"
        },
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mainnetCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "secondRoundRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "increaseApprovalAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "firstRoundRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "basicDonation",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "decreaseApprovalAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "firstRoundAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "initialAccount",
          "type": "address"
        },
        {
          "name": "_firstRoundRate",
          "type": "uint256"
        },
        {
          "name": "_secondRoundRate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SaleEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "mainnetAddr",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "ToMainnetEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "startSecondRound",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "startPending",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "mainnetAddr",
          "type": "string"
        }
      ],
      "name": "transferToMainnet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ]
},{}],2:[function(require,module,exports){
function Alert(elem) {
    this.elem = elem;
    this.inner = elem.getElementsByClassName('alert')[0];
    this.close = elem.getElementsByClassName('close')[0];
    var self = this;
    this.close.onclick = function () {
        self.miss();
    };
}

Alert.prototype.setContent = function(div) {
    this.inner.innerHTML = '';
    this.inner.appendChild(div);
};

Alert.prototype.show = function() {
    this.elem.classList.remove('exit');
    this.elem.classList.add('enter');
};
Alert.prototype.miss = function() {
    this.elem.classList.add('exit');
    this.elem.classList.remove('enter');
    var self = this;
    setTimeout(function () {
        self.elem.classList.remove('exit');
    }, 400);
};

Alert.prototype.setHeight = function(height) {
    this.inner.style.height = height + 'px';
    this.inner.style.marginTop = '-' + height/2 + 'px';
};

module.exports = Alert;
},{}],3:[function(require,module,exports){
module.exports={
  "zh-CN": {
    "subtitle": "第一个采用POU算法的区块链<br>旨在鼓励内容生成者服务更多的用户,并且为之提供更好的创作环境以及更多收益",
    "Buy Token": "购买代币",
    "Purchase address": "购买地址",
    "Address Append": "Ropsten测试网",
    "ETH Wallet": "ETH钱包",
    "Number": "购买数量(ETH)",
    "Buy": "购买",
    "Vote to Transfer": "投票转移",
    "Query Token": "查询代币",
    "Query Wallet": "查询地址",
    "Count": "持有数量",
    "Mainnet Wallet": "主网钱包",
    "Back": "返回",
    "Confirm": "确定",
    "Input wallet": "请输入主网钱包地址",
    "Cancel": "取消",
    "Transaction Complete": "交易完成",
    "Transaction Error": "交易中发生错误",
    "Buy Success": "购买成功",
    "No plugin": "如果没有安装MetaMask插件可以直接往地址中转入相应数量的以太币",
    "Invalid number": "购买数量错误，数量过小或有误。(>0.001)",
    "No wallet": "没有检测到ETH钱包，请先安装MetaMask",
    "Transfer mainadd": "转移到主网账户"
  },
  "en": {
    "subtitle": "The first POU Blockchain<br>???",
    "Buy Token": "Buy Token",
    "Purchase address": "Purchase address",
    "Address Append": "Ropsten test network",
    "ETH Wallet": "ETH Wallet",
    "Number": "Number(ETH)",
    "Buy": "Buy",
    "Vote to Transfer": "Vote",
    "Query Token": "Query Token",
    "Query Wallet": "Query Wallet",
    "Count": "Count",
    "Mainnet Wallet": "Mainnet Wallet",
    "Back": "Back",
    "Confirm": "Confirm",
    "Input wallet": "Mainnet Wallet must not empty.",
    "Cancel": "Cancel",
    "Transaction Complete": "Transaction Complete",
    "Transaction Error": "Something wrong in the transaction.",
    "Buy Success": "Buy Success",
    "No plugin": "You can transfer to the wallet address, if MetaMask not installed.",
    "Invalid number": "Invalid number or the number is too small.(>0.001)",
    "No wallet": "No wallet detected, please install MetaMask.",
    "Transfer mainadd": "Transfer to mainnet wallet"
  }
}

},{}],4:[function(require,module,exports){
/**
 * Created by mac on 2018/2/1.
 */

var locs = require('./loc.json');

var language;
if (navigator.language) {
	language = navigator.language;
} else {
	language = navigator.browserLanguage;
}

function initialize() {
	var elems = document.querySelectorAll('*[data-text]'),i,t,ele;
	for (i = 0, t = elems.length; i < t; ++i) {
		ele = elems[i];
		ele.innerText = loc(ele.getAttribute('data-text'));
	}
	elems = document.querySelectorAll('*[data-placeholder]');
    for (i = 0, t = elems.length; i < t; ++i) {
        ele = elems[i];
        ele.placeholder = loc(ele.getAttribute('data-placeholder'));
    }
    elems = document.querySelectorAll('*[data-html]');
    for (i = 0, t = elems.length; i < t; ++i) {
        ele = elems[i];
        ele.innerHTML = loc(ele.getAttribute('data-html'));
    }
}

function loc(text) {
	return initialize.words[text] || text;
}
initialize.loc = loc;

initialize.set = function(lan) {
    if (/^zh/.test(lan)) {
        initialize.words = locs['zh-CN'];
        initialize.language = 'zh';
    }else {
        initialize.words = locs['en'];
        initialize.language = 'en';
    }
};

initialize.set(language);

module.exports = initialize;

},{"./loc.json":3}],5:[function(require,module,exports){

var abi = require('./abi');
var Alert = require('./alert');
var loc = require('./localization');
// var web3 = new Web3();
// web3.setProvider(new web3.providers.HttpProvider("https://ropsten.infura.io/QDtsUjyVAFY8i49NGymM"));
var address = '0x48cce49bea8cc043c8cbdbdbac2da6e410015df1';

var util = require('util');
var envColor = 0x001133;

function Ball(geo, material) {
    THREE.Mesh.call(this, geo, material);
    this.speed = Math.random() * 10;
    this.rotation_speed = 0.1 + 0.9 * Math.random();
    this.rotation.x = this.rotation.y = 0;
    this.rotation.z = Math.random() * Math.PI * 2;
    this.tmp = new THREE.Vector3();
    this.target = new THREE.Vector3();
}
util.inherits(Ball, THREE.Mesh);
Ball.prototype.update = function (delta, balls) {
    if (this.target.z === 0) {
        this.target.set(this.position.x, this.position.y, this.position.z);
    }
    this.tmp.z = 0;
    this.rotation.z += delta * this.rotation_speed;
    this.tmp.x = Math.sin(this.rotation.z) * this.speed * delta;
    this.tmp.y = Math.cos(this.rotation.z) * this.speed * delta;
    var vc = new THREE.Vector3();
    for (var i = 0, t = balls.length; i < t; ++i) {
        var b = balls[i];
        if (b !== this) {
            var len = this.position.distanceTo(b.position);
            if (len < 1) {
                len = 1;
            }
            if (len < 60) {
                vc.set(this.position.x - b.position.x,
                    this.position.y - b.position.y,
                    this.position.z - b.position.z);
                this.tmp.add(vc.divideScalar(len));
            }
        }
    }
    if (this.position.x > 300) {
        this.tmp.x -= (this.position.x - 300) * 0.1;
    }else if (this.position.x < -300) {
        this.tmp.x -= (this.position.x + 300) * 0.1;
    }
    if (this.position.y > 150) {
        this.tmp.y -= (this.position.y - 150) * 0.1;
    }else if (this.position.y < -150){
        this.tmp.y -= (this.position.y + 150) * 0.1;
    }
    this.target.add(this.tmp);

    if (!this.position.equals(this.target)) {
        this.position.lerp(this.target, 0.02);
        if (this.position.distanceTo(this.target) < 0.01) {
            this.position.set(this.target.x, this.target.y, this.target.z);
        }
    }
};

var container = document.getElementById('graph');
var scene = new THREE.Scene();
var renderer = new THREE.WebGLRenderer( { antialias: true } );
renderer.setPixelRatio( window.devicePixelRatio );
renderer.setSize( container.clientWidth, container.clientHeight );
container.appendChild( renderer.domElement );

var camera = new THREE.PerspectiveCamera( 40, container.clientWidth / container.clientHeight, 1, 2000 );
camera.position.set( 0.0, 0.0, -300 );
camera.lookAt(new THREE.Vector3( 0, 0, 0 ));
scene.add(camera);

var cubeWidth = 400;
var numberOfSphersPerSide = 5;
var sphereRadius = ( cubeWidth / numberOfSphersPerSide ) * 0.8 * 0.5;
var stepSize = 1.0 / numberOfSphersPerSide;
scene.background = new THREE.Color(envColor);

var diffuseColor = new THREE.Color(0xffffff);

var imgTexture = new THREE.TextureLoader().load( "res/moon_1024.jpg" );
imgTexture.wrapS = imgTexture.wrapT = THREE.RepeatWrapping;
imgTexture.anisotropy = 16;
imgTexture = null;

// var material = new THREE.MeshPhysicalMaterial( {
//     color: diffuseColor,
//     metalness: 0,
//     roughness: 0.5,
//     clearCoat:  0.5,
//     clearCoatRoughness: 0.6,
//     reflectivity: 0.5,
// } );

var balls = [];
var material = new THREE.MeshLambertMaterial( {
    map: imgTexture,
    color: diffuseColor,
    reflectivity: 1
} );

var geometry = new THREE.SphereBufferGeometry( sphereRadius, 32, 32 );
for (var i = 0, t = 20; i < t; ++i) {
    var mesh = new Ball( geometry, material );
    scene.add( mesh );
    mesh.position.x = 600 * (Math.random() - 0.5);
    mesh.position.y = 300 * (Math.random() - 0.5);
    mesh.position.z = -10;

    var scale = 2 * Math.random();
    mesh.scale.x = scale;
    mesh.scale.y = scale;
    mesh.scale.z = scale;
    mesh.castShadow = true;
    balls.push(mesh);
}

var geoFloor = new THREE.PlaneBufferGeometry( 2000, 2000 );

var matFloor = new THREE.MeshPhongMaterial( { color: 0x808080, dithering: true } );

var mshFloor = new THREE.Mesh( geoFloor, matFloor );
mshFloor.rotation.x = Math.PI;
mshFloor.receiveShadow = true;
mshFloor.position.set(0,0,100);
scene.add(mshFloor);


var spotLight = new THREE.SpotLight( 0xaaaaff );
spotLight.position.set( 0, 0, -300 );

spotLight.castShadow = true;

spotLight.shadow.mapSize.width = 1024;
spotLight.shadow.mapSize.height = 1024;

spotLight.shadow.camera.near = 500;
spotLight.shadow.camera.far = 4000;
spotLight.shadow.camera.fov = 30;
spotLight.angle = Math.PI / 10;
spotLight.penumbra = 0.99;
scene.add(spotLight);

var directionalLight = new THREE.DirectionalLight( envColor, 1 );
directionalLight.position.set( 0, 1, -1 ).normalize();
scene.add( directionalLight );

scene.add( new THREE.AmbientLight( envColor ) );

var ZERO = new THREE.Vector3(0,0,0);
var cameraTarget = camera.position.clone();

var is_in = true;
function animate() {
    if (is_in) {
        requestAnimationFrame( animate );
        render();
    }
}
var old_time;
function render() {
    var time = Date.now();
    if (!old_time) old_time = time;

    for (var i = 0, t = balls.length; i < t; ++i) {
        balls[i].update((time - old_time)/1000.0, balls)
    }
    if (!cameraTarget.equals(camera.position)) {
        camera.position.lerp(cameraTarget, 0.02);
        if (camera.position.distanceTo(cameraTarget) < 0.01) {
            camera.position.copy(cameraTarget);
        }
        camera.lookAt(ZERO);
    }
    old_time = time;
    renderer.render( scene, camera );
}
animate();

window.onblur = function() {
    is_in = false;
};
window.onfocus = function() {
    is_in = true;
    old_time = null;
    requestAnimationFrame( animate );
};

window.addEventListener( 'resize', onWindowResize, false );
function onWindowResize() {
    camera.aspect = container.clientWidth / container.clientHeight;
    camera.updateProjectionMatrix();
    renderer.setSize( container.clientWidth, container.clientHeight );
}


var top = document.getElementsByClassName('top')[0];
top.onmousemove = function (e) {
    var px = e.clientX / top.clientWidth, py = e.clientY / top.clientHeight;
    cameraTarget.set((px - 0.5)*100, (py - 0.5) * 40, -300);
};

var progressBar = document.getElementsByClassName('m-progress-bar')[0];

var web3js = null;
window.addEventListener('load', function() {

    if (typeof web3 !== 'undefined') {
        // Use Mist/MetaMask's provider
        web3js = new Web3(web3.currentProvider);
    } else {
        console.log('No web3? You should consider trying MetaMask!')
        // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)
        web3js = new Web3(new Web3.providers.HttpProvider("https://ropsten.infura.io/QDtsUjyVAFY8i49NGymM"));
    }

    startApp();

});

var buyToken = document.getElementById('buyToken');

function startApp() {

    var enter = 'enter', exit = 'exit';

    var contract = web3js.eth.contract(abi).at(address);


    var alert = new Alert(document.getElementsByClassName('alert-cover')[0]);
    buyToken.onclick = function () {
        cAnim(content0, 'up', enter);
        content1.style.display = 'none';
        content2.style.display = 'none';
        content3.style.display = 'none';
        content4.style.display = 'none';
        alert.show();
    };

    loc();

    function cAnim(content, from, action) {
        content.style.display = 'block';
        var need_remove = [];
        for (var i = 0, t = content.classList.length; i < t; ++i) {
            var cn = content.classList[i];
            if (cn.match(/(enter)|(exit)$/)) {
                need_remove.push(cn);
            }
        }
        for (i = 0, t = need_remove.length; i < t; ++i) {
            content.classList.remove(need_remove[i]);
        }
        content.classList.add('content_'+from+'_' + action);
        if (action === exit) {
            setTimeout(function () {
                content.style.display = 'none';
            }, 400);
        }else if (action === enter) {
            var size = parseInt(content.getAttribute('data-size')) || 3;
            alert.setHeight(size * 70);
        }
    }

    document.getElementById('l2eAddress').value = address;

    var checkButton = document.getElementsByClassName('check-balance')[0];
    var buyButton = document.getElementsByClassName('buy-token')[0];
    var content0 = document.getElementsByClassName('alert-content-0')[0];
    var content1 = document.getElementsByClassName('alert-content-1')[0];
    var content2 = document.getElementsByClassName('alert-content-2')[0];
    var content3 = document.getElementsByClassName('alert-content-3')[0];
    var content4 = document.getElementsByClassName('alert-content-4')[0];
    checkButton.onclick = function () {
        cAnim(content0, 'up', exit);
        cAnim(content1, 'down', enter);
    };
    buyButton.onclick = function () {
        cAnim(content0, 'up', enter);
        cAnim(content1, 'down', exit);
    };

    var myAddress = document.getElementById('myAddress'), balance = document.getElementById('balance');
    var buyForm = document.getElementById('buyForm'), amount = document.getElementById('amount');
    var buyAlert = document.getElementById('buyAlert'), vote = document.getElementById('vote');
    var myWallet = document.getElementById('myWallet'), voteBack = document.getElementById('voteBack');
    var voteForm = document.getElementById('voteForm'), mainnetWallet = document.getElementById('mainnetWallet');
    var confirmBack = document.getElementById('confirmBack'), voteAlert = document.getElementById('voteAlert');
    var confirmForm = document.getElementById('confirmForm'), myETHWallet = document.getElementById('myETHWallet');
    var infoForm = document.getElementById('infoForm'), infoText = document.getElementById('infoText');

    var infoNextTarget;

    try {
        for (var i = 0, t = web3js.eth.accounts.length; i < t; ++i) {
            var option = document.createElement('option');
            option.value = option.innerText = web3js.eth.accounts[i];
            myWallet.appendChild(option);
            option = document.createElement('option');
            option.value = option.innerText = web3js.eth.accounts[i];
            myAddress.appendChild(option);
            option = document.createElement('option');
            option.value = option.innerText = web3js.eth.accounts[i];
            myETHWallet.appendChild(option);
        }
    }catch (e) {

    }

    function updateBalance() {
        contract.balanceOf(myAddress.value, function (err, res) {
            if (!err) {
                var n = new BigNumber(res);
                balance.value = n.toString();
            }
        });
    }

    myAddress.onchange = function () {
        updateBalance();
    };
    if (myAddress.value.length !== 0) {
        updateBalance();
    }

    buyForm.onsubmit = function () {
        var v = parseFloat(amount.value);
        if (v > 0.001) {
            try {
                web3js.eth.sendTransaction({
                    to: address,
                    value: web3js.toWei(v, 'ether'),
                },function (err, res) {
                    if (err) {
                        infoText.innerHTML = loc.loc('Transaction Error');
                        infoNextTarget = content0;
                    }else {
                        infoText.innerText = loc.loc('Buy Success') + '!';
                        infoNextTarget = function () {
                            alert.miss();
                        };
                    }
                    cAnim(content4, 'down', enter);
                    cAnim(content0, 'up', exit);
                });
            }catch (e) {
            }
            buyAlert.innerText = loc.loc('No plugin');
            buyAlert.classList.add('show');
            setTimeout(function () {
                buyAlert.classList.remove('show');
            }, 5000);
        }else {
            buyAlert.innerText = loc.loc('Invalid number');
            buyAlert.classList.add('show');
            setTimeout(function () {
                buyAlert.classList.remove('show');
            }, 5000);
        }
        return false;
    };

    vote.onclick = function () {
        cAnim(content2, 'down', enter);
        cAnim(content0, 'up', exit);
    };

    voteBack.onclick = function() {
        cAnim(content0, 'up', enter);
        cAnim(content2, 'down', exit);
    };

    var mainnetAddress=null, ethAddress;
    voteForm.onsubmit = function () {
        var add = mainnetWallet.value;
        var myAdd = myAddress.value;
        if (myAdd.length > 0) {
            ethAddress = myAdd;
        }else {
            voteAlert.classList.add('show');
            voteAlert.innerText = loc.loc('No wallet');
            setTimeout(function () {
                voteAlert.classList.remove('show');
            }, 5000);
            return false;
        }
        if (add.length > 0) {
            content3.querySelector('#confirmText').innerHTML = loc.loc('Transfer mainadd') + '<br><b>' + add + '</b>';
            mainnetAddress = add;
        }else {
            voteAlert.classList.add('show');
            voteAlert.innerText = loc.loc('Input wallet');
            setTimeout(function () {
                voteAlert.classList.remove('show');
            }, 5000);
            return false;
        }

        cAnim(content3, 'down', enter);
        cAnim(content2, 'up', exit);
        return false;
    };

    confirmBack.onclick = function () {
        cAnim(content3, 'down', exit);
        cAnim(content2, 'up', enter);
    };

    confirmForm.onsubmit = function () {
        contract.transferToMainnet(mainnetAddress, {
            from: ethAddress,
            to: mainnetAddress
        }, function (err, res) {
            console.log(err);
            console.log(res);
        });
        return false;
    };
    infoForm.onsubmit = function () {
        if (typeof infoNextTarget === 'function') {
            infoNextTarget();
        }else {
            cAnim(infoNextTarget, 'up', enter);
            cAnim(content4, 'down', exit);
        }
        return false;
    };



    var title = document.getElementsByClassName('title')[0];
    title.classList.add('title-fade-appear');
    setTimeout(function () {
        var subtitle = document.getElementsByClassName('subtitle')[0];
        subtitle.classList.add('fade-appear');
        setTimeout(function () {
            var timer = document.getElementsByClassName('timer')[0];
            timer.classList.add('fade-appear');
            contract.totalSupply(function (err, res) {

                var total = new BigNumber(res);
                contract.balanceOf('0x0', function (err, res) {
                    var got = new BigNumber(res);
                    var ex = total.minus(got);
                    progressBar.style.width = ex.div(total).mul(100).toNumber() + '%';

                    document.querySelector('.top .content').classList.add('fade-appear');
                });
            });
        }, 600);
    }, 800);

    var languageChange = document.getElementById('languageChange');
    if (loc.language === 'zh') {
        languageChange.innerText = 'E';
    }else {
        languageChange.innerText = '中';
    }

    languageChange.onclick = function () {
        if (loc.language === 'en') {
            loc.set('zh');
            loc();
        }else {
            loc.set('en');
            loc();
        }
        if (loc.language === 'zh') {
            languageChange.innerText = 'E';
        }else {
            languageChange.innerText = '中';
        }
    };

    // web3js.eth.sendTransaction({
    //     to: address,
    //     value: web3js.toWei(2, 'ether'),
    // },function (err, res) {
    //     console.log(err);
    //     console.log(res);
    // });
}
},{"./abi":1,"./alert":2,"./localization":4,"util":9}],6:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],7:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],8:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],9:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":8,"_process":6,"inherits":7}]},{},[5]);
